------
SHORT-TERM:

    - FIX SERVER BUG.  Y U NO PLAY!?!??!
    - Flash/AIR client?
    - OTP/Dialyzer/Rebar builds?
    - Allow for null moves/lost turns.  Add to Thrift file, add to code.
    - Deploy?  Snap site that talks to the Erlang via Thrift, Snap provides the web presence?

    - Move selection (after generation, likely start out with naive high score).
	- Optimize Wildcards/Movesearch.
	    - PROFILE DAT
	    - nlogn duplication removal (currently n^2).
	    - Only check half as many candidates by looking for border cases.
    - Integrate the bug list/this file with the Github issue tracker, API?


SERVER
    - Better, more rigorous testing.  Mostly in movesearches, and the most recent features (wildcards, 
      dumping previous computation to disk).  Use abstractions!
    - Optimize, optimize, optimize.  Especially with wildcards.
        Immediate, obvious optimizations:
            -> Don't check candidate tiles on the right/bottom of an occupied tile
               unless there isn't another way of reaching it, i.e. from above or from the right.
            -> Remove duplicate candidates and duplicate moves with a sort-and-filter (nlog(n)),
               rather than the current one-sweep naive traversal (n^2-ish).
            -> Make better use of spawn(), especially on all the maps and foldls.  Paralellize 
               candidates, for example.
    - Types with Dialyzer.
    - Refactor/restructure the src/ directory for a clear separation of modules:  game (for things 
      like boards, tiles, etc), server (for things like serialization and/or database handling), 
      and ai (for movesearches, finding the best move, etc.).

   - Generalize the board and board parser to take different default
      configurations, such as a Lexulous board, Words With Friends, or a custom
      board.  The hard-coding is more a result of the fact that I'm in a place with
      no internet and can't consult the Regex library, and also because this is
      slightly easier.  This will mostly involve changing the new_board to parse the
      board in lib/, and changing the BOARD_HEIGHT and BOARD_LENGTH constants to
      read from that file as well. Ideally, one could start a game parametrized by
      game type (words_with_friends) and dictionary (twl, international) etc.

    - I might be missing something. grep TODO and FIXME in the source to find something to do!


CLIENT
    - Undo/back.
    - Allow a turn to pass/skip.
    - Allow save/resume games.
    - Allow to check move validity on play_move.
    - Show history.

    - HOLY SHIT REFACTOR (if you want to preserve the client at all)
        - At the very least, generalize board printing code with some kind of board_window coordinates, 
          rather than duplicating  your hackey logic everywhere (most areas that print to the board).
