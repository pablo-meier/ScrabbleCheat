------
SHORT-TERM:

Features:
	- Wildcards.

        get_moves_from_candidate has a structure under the case statement that can be
        factored out into an external function.  Non-wildcards can simply call that
        function as before
        
        1 - REFACTOR get_moves_from_candidate TO USE EXTERNAL FUNCTION
        2 - REFACTOR next() TO USE EXTERNAL FUNCTION
        
        After all tests pass as before, have next() return a new case that returns
        identically to the previous case, but instead of 
        
        {success, NewFollowstruct, Completed} 
        returns 
        {wildcard, [Followstructs], Completed}
        
        The rest is just running a fold on those new functions rather than simply
        calling after case checking for a wildcard.

	- Connections between 'islands:' when you build a bridge between two words to
	  build a longer, more impressive word.
	- Move selection (after generation, likely start out with naive high score).
	- UI. Curses/Nitrogen?

Code Quality:
	- Better use of branching, git.  So far mostly just check-in/check-out to 
	  master, pretty lame.
	- Types with Dialyzer.
	- Better, more rigorous testing.  Mostly in movesearches.  Use abstractions!

- grep TODO and FIXME in the source to find something to do!

------
BROADER:

- Generalize the board and board parser to take different default
  configurations, such as a Lexulous board, Words With Friends, or a custom
  board.  The hard-coding is more a result of the fact that I'm in a place with
  no internet and can't consult the Regex library, and also because this is
  slightly easier.  This will mostly involve changing the new_board to parse the
  board in lib/, and changing the BOARD_HEIGHT and BOARD_LENGTH constants to
  read from that file as well. Ideally, one could start a game parametrized by
  game type (words_with_friends) and dictionary (twl, international) etc.
