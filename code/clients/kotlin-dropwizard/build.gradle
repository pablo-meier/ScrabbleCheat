import groovy.json.JsonSlurper

buildscript {
  ext.kotlin_version = '1.0.1-2'
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

repositories {
    mavenCentral()
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

sourceCompatibility = '1.8'

mainClassName = 'com.morepaul.scrabblecheat.ScrabbleCheatWebappApplication'
version = '0.1.0'
ext.configFile = 'build/resources/main/scrabblecheat-webapp.yml'

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.7.1-2"

  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

  compile 'io.dropwizard:dropwizard-core:0.9.2'

  compile 'org.apache.thrift:libthrift:0.9.3'
}

def JsonEnv() {
    def defaultEnv = []
    def localEnv = []

    def defaultEnvFile = new File('.gradle_env.json')
    if (defaultEnvFile.exists()) {
        defaultEnv = new JsonSlurper().parseText(defaultEnvFile.text)
    }

    def localEnvFile = new File('.gradle_env_local.json')
    if (localEnvFile.exists()) {
        localEnv = new JsonSlurper().parseText(localEnvFile.text)
    }

    return defaultEnv + localEnv
}

task migrate(type: JavaExec) {
    JsonEnv().each { k, v -> environment k, v }
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    args 'db', 'migrate', configFile
}

run {
    JsonEnv().each { k, v -> environment k, v }
    args 'server', configFile
}

test {
    JsonEnv().each { k, v -> environment k, v }
    testLogging.showStandardStreams = true
}

task unitTest(type: Test) {
    JsonEnv().each { k, v -> environment k, v }
    testLogging.showStandardStreams = true
    exclude '**/*IntegrationTest**'
}

task integrationTest(type: Test) {
    JsonEnv().each { k, v -> environment k, v }
    testLogging.showStandardStreams = true
    include '**/*IntegrationTest**'
}

