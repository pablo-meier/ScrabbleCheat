ScrabbleCheat
=============

Revenge of the Verbally Challenged
----------------------------------

ScrabbleCheat is a tool I'm developing to finally beat my girlfriend in Scrabble.
Developing it in Erlang, mostly for fun.  Use it yourself, or explore the code!

Originally development was considered in phases: generate words from your rack,
then place the words on the board.  This was using a DAWG algorithm most popular
in other Scrabble AIs such as Maven.  If you checkout the repo at tag 
WORDSEARCH, you will see this!  Run 'make run' from that commit and you get a 
simple trie-based search to generate words from your rack of tiles.

This was eschewed in favor of a GADDAG-based approach, such as the one used in
Quackle (http://people.csail.mit.edu/jasonkb/quackle/).  A GADDAG, for those who
don't know, is a perverted trie that is fat and fast, designed specifically for
Scrabble and games with similar rules (http://en.wikipedia.org/wiki/GADDAG).

### Contents

ScrabbleCheat has the following contents:

* Makefile -> Builds the project, targets below.
* src/ -> Contains the .erl source files.
* lib/ -> Contains any extraneous support, such as testing macros or dictionary files.
* test/ -> Contains unit tests for each of the modules, some rigorous, some not.

### Makefile

The Makefile has the following targets:

* test (default) -> Compiles the project and runs the unit tests.
* shell -> Compiles the project and loads the definitions into an Erlang shell.
* clean -> Removes all compilation bits.
* compile -> Builds the project and stores the .beam files into build/
* compile-test -> Builds the Unit tests.

For now this is just loose code that will hopefully piece together into actual usable software; 
in the meantime, I'm putting it here as well as my local machine.  Enjoy, and email
about any questions, concerns!

- Paul Meier
09/20/2010
pablo.a.meier@gmail.com  
www.morepaul.com
